{"ts":1368434867942,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"TSDragAndDrop\n=============\n\nSimple DragAndDrop TypeScript class\n\nПростой класс для обкатывания синтаксиса свежего TypeScript. Дабы не плясать вокруг борьбы с проблемой различной интерпретации объекта-событие, использовался jQuery<br>\nВыводит всплывающее окошко с сообщением (можно использовать любой HTML. Вывести форму всплывающим окном, например). <br>\nИспользование(псевдокод):<br><br>\nif (что-то произошло) {<br>\n  var message = new MessageBox(\"название_jquery_селектора\");<br>\n  message.setHeaderText(\"Заголовок окна\");<br>\n  message.setBodyText(\"Тело окна. Можно использовать html-теги\");<br>\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":602}]],"length":602}
{"contributors":[],"silentsave":false,"ts":1368434966638,"patch":[[{"diffs":[[0,";<br>\n}\n"],[1,"\n\nNot exactly sure whether this would work in your code as you have $resource integration. But it may be worth to look into angular events: $routeChangeStart and $routeChangeSuccess.\n\nin html:\n\n<span ng-show=\"isViewLoading\"> loading the view... <span>\n\nin controller (which defines the scope of the html above):\n\n$scope.isViewLoading = false;\n$scope.$on('$routeChangeStart', function() {\n  $scope.isViewLoading = true;\n});\n$scope.$on('$routeChangeSuccess', function() {\n  $scope.isViewLoading = false;\n});\n\n"]],"start1":594,"start2":594,"length1":8,"length2":515}]],"length":1109,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368434982543,"patch":[[{"diffs":[[0,"ration. "],[1,"\n"],[0,"But it m"]],"start1":685,"start2":685,"length1":16,"length2":17}]],"length":1110,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368435324218,"patch":[[{"diffs":[[0,">\n}\n"],[-1,"\n\nNot exactly sure whether this would work in your code as you have $resource integration. \nBut it may be worth to look into angular events: $routeChangeStart and $routeChangeSuccess.\n\nin html:\n\n<span ng-show=\"isViewLoading\"> loading the view... <span>\n\nin controller (which defines the scope of the html above):\n\n$scope.isViewLoading = false;\n$scope.$on('$routeChangeStart', function() {\n  $scope.isViewLoading = true;\n});\n$scope.$on('$routeChangeSuccess', function() {\n  $scope.isViewLoading = false;\n});\n\n"]],"start1":598,"start2":598,"length1":512,"length2":4}]],"length":602,"saved":false}
{"contributors":[],"silentsave":false,"ts":1368436015409,"patch":[[{"diffs":[[0,"if ("],[-1,"что-то произошло"],[1,"событие"],[0,") {<"]],"start1":390,"start2":390,"length1":24,"length2":15},{"diffs":[[0,"Box("],[-1,"\"название_jquery_селектора\""],[0,");<b"]],"start1":436,"start2":436,"length1":35,"length2":8},{"diffs":[[0,".set"],[-1,"HeaderTex"],[1,"Conten"],[0,"t(\"З"]],"start1":456,"start2":456,"length1":17,"length2":14},{"diffs":[[0,"кна\""],[-1,");<br>\n  message.setBodyText(\"Тело окна. Можно использовать html-теги\""],[1,", \"Содержимое\", bool loadPageViaAjax /* если true, то в тело окна загрузится страница по указанному адресу во втором параметре */"],[0,");<b"]],"start1":480,"start2":480,"length1":78,"length2":137}]],"length":622,"saved":false}
